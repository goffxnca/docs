"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[7239],{80573:(n,e,s)=>{s.r(e),s.d(e,{assets:()=>i,contentTitle:()=>t,default:()=>p,frontMatter:()=>r,metadata:()=>l,toc:()=>u});var a=s(85893),o=s(11151),c=s(74866),d=s(85162);const r={id:"network",title:"Network"},t=void 0,l={id:"api/rpc/network",title:"Network",description:"The RPC API enables you to query status information for nodes and validators.",source:"@site/../docs/5.api/rpc/network.md",sourceDirName:"5.api/rpc",slug:"/api/rpc/network",permalink:"/docs/api/rpc/network",draft:!1,unlisted:!1,editUrl:"https://github.com/near/docs/edit/master/website/../docs/5.api/rpc/network.md",tags:[],version:"current",lastUpdatedBy:"Ivan Frolov",lastUpdatedAt:1722858621e3,frontMatter:{id:"network",title:"Network"},sidebar:"api",previous:{title:"Protocol",permalink:"/docs/api/rpc/protocol"},next:{title:"Transactions",permalink:"/docs/api/rpc/transactions"}},i={},u=[{value:"Node Status",id:"node-status",level:2},{value:"What could go wrong?",id:"what-could-go-wrong",level:4},{value:"Network Info",id:"network-info",level:2},{value:"What could go wrong?",id:"what-could-go-wrong-1",level:4},{value:"Validation Status",id:"validation-status",level:2},{value:"What could go wrong?",id:"what-could-go-wrong-2",level:4}];function h(n){const e={a:"a",blockquote:"blockquote",code:"code",em:"em",h2:"h2",h4:"h4",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.a)(),...n.components},{Details:s}=e;return s||function(n,e){throw new Error("Expected "+(e?"component":"object")+" `"+n+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(e.p,{children:"The RPC API enables you to query status information for nodes and validators."}),"\n",(0,a.jsx)(e.hr,{}),"\n",(0,a.jsx)(e.h2,{id:"node-status",children:"Node Status"}),"\n",(0,a.jsxs)(e.blockquote,{children:["\n",(0,a.jsx)(e.p,{children:"Returns general status of a given node (sync status, nearcore node version, protocol version, etc), and the current set of validators."}),"\n"]}),"\n",(0,a.jsxs)(e.ul,{children:["\n",(0,a.jsxs)(e.li,{children:["method: ",(0,a.jsx)(e.code,{children:"status"})]}),"\n",(0,a.jsxs)(e.li,{children:["params: ",(0,a.jsx)(e.code,{children:"[]"})]}),"\n"]}),"\n",(0,a.jsx)(e.p,{children:"Example:"}),"\n",(0,a.jsxs)(c.Z,{children:[(0,a.jsx)(d.Z,{value:"json",label:"JSON",default:!0,children:(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-json",children:'{\n  "jsonrpc": "2.0",\n  "id": "dontcare",\n  "method": "status",\n  "params": []\n}\n'})})}),(0,a.jsx)(d.Z,{value:"js",label:"\ud83c\udf10 JavaScript",label:"JavaScript",children:(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-js",children:"const response = await near.connection.provider.status();\n"})})}),(0,a.jsx)(d.Z,{value:"http",label:"HTTPie",children:(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-bash",children:"http post https://rpc.testnet.near.org jsonrpc=2.0 method=status params:='[]' id=dontcare\n"})})})]}),"\n",(0,a.jsxs)(s,{children:[(0,a.jsx)("summary",{children:"Example response: "}),(0,a.jsx)("p",{children:(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-json",children:'{\n  "jsonrpc": "2.0",\n  "result": {\n    "version": {\n      "version": "1.14.0-rc.1",\n      "build": "effa3b7a-modified"\n    },\n    "chain_id": "testnet",\n    "protocol_version": 35,\n    "latest_protocol_version": 35,\n    "rpc_addr": "0.0.0.0:3030",\n    "validators": [\n      {\n        "account_id": "node3",\n        "is_slashed": false\n      },\n      {\n        "account_id": "node0",\n        "is_slashed": false\n      },\n      {\n        "account_id": "staked.pool.f863973.m0",\n        "is_slashed": false\n      },\n      {\n        "account_id": "01node.pool.f863973.m0",\n        "is_slashed": false\n      },\n      {\n        "account_id": "node2",\n        "is_slashed": false\n      },\n      {\n        "account_id": "dokia.pool.f863973.m0",\n        "is_slashed": false\n      },\n      {\n        "account_id": "node1",\n        "is_slashed": false\n      },\n      {\n        "account_id": "lowfeevalidation.pool.f863973.m0",\n        "is_slashed": false\n      },\n      {\n        "account_id": "sl1sub.pool.f863973.m0",\n        "is_slashed": false\n      },\n      {\n        "account_id": "zainy.pool.f863973.m0",\n        "is_slashed": false\n      },\n      {\n        "account_id": "chorus-one.pool.f863973.m0",\n        "is_slashed": false\n      },\n      {\n        "account_id": "thepassivetrust.pool.f863973.m0",\n        "is_slashed": false\n      },\n      {\n        "account_id": "certusone.pool.f863973.m0",\n        "is_slashed": false\n      },\n      {\n        "account_id": "joe1.pool.f863973.m0",\n        "is_slashed": false\n      },\n      {\n        "account_id": "bisontrails.pool.f863973.m0",\n        "is_slashed": false\n      },\n      {\n        "account_id": "valeraverim.pool.f863973.m0",\n        "is_slashed": false\n      },\n      {\n        "account_id": "lunanova.pool.f863973.m0",\n        "is_slashed": false\n      },\n      {\n        "account_id": "bazilik.pool.f863973.m0",\n        "is_slashed": false\n      },\n      {\n        "account_id": "dsrvlabs.pool.f863973.m0",\n        "is_slashed": false\n      },\n      {\n        "account_id": "kronos.pool.f863973.m0",\n        "is_slashed": false\n      },\n      {\n        "account_id": "nodeasy.pool.f863973.m0",\n        "is_slashed": false\n      },\n      {\n        "account_id": "kytzu.pool.f863973.m0",\n        "is_slashed": false\n      },\n      {\n        "account_id": "bitcat.pool.f863973.m0",\n        "is_slashed": false\n      },\n      {\n        "account_id": "pool_easy2stake.pool.f863973.m0",\n        "is_slashed": false\n      },\n      {\n        "account_id": "fresh_lockup.pool.f863973.m0",\n        "is_slashed": false\n      },\n      {\n        "account_id": "staking-power.pool.f863973.m0",\n        "is_slashed": false\n      },\n      {\n        "account_id": "syncnode.pool.f863973.m0",\n        "is_slashed": false\n      },\n      {\n        "account_id": "inotel.pool.f863973.m0",\n        "is_slashed": false\n      },\n      {\n        "account_id": "zpool.pool.f863973.m0",\n        "is_slashed": false\n      },\n      {\n        "account_id": "aquarius.pool.f863973.m0",\n        "is_slashed": false\n      },\n      {\n        "account_id": "cloudpost.pool.f863973.m0",\n        "is_slashed": false\n      },\n      {\n        "account_id": "staked.pool.6fb1358",\n        "is_slashed": false\n      },\n      {\n        "account_id": "moonlet.pool.f863973.m0",\n        "is_slashed": false\n      },\n      {\n        "account_id": "jazza.pool.f863973.m0",\n        "is_slashed": false\n      },\n      {\n        "account_id": "orangeclub.pool.f863973.m0",\n        "is_slashed": false\n      },\n      {\n        "account_id": "blazenet.pool.f863973.m0",\n        "is_slashed": false\n      },\n      {\n        "account_id": "pathrock.pool.f863973.m0",\n        "is_slashed": false\n      },\n      {\n        "account_id": "stakin.pool.f863973.m0",\n        "is_slashed": false\n      },\n      {\n        "account_id": "northernlights.stakingpool",\n        "is_slashed": false\n      },\n      {\n        "account_id": "alexandruast.pool.f863973.m0",\n        "is_slashed": false\n      },\n      {\n        "account_id": "top.pool.f863973.m0",\n        "is_slashed": false\n      }\n    ],\n    "sync_info": {\n      "latest_block_hash": "44kieHwr7Gg5r72V3DgU7cpgV2aySkk5qbBCdvwens8T",\n      "latest_block_height": 17774278,\n      "latest_state_root": "3MD3fQqnm3JYa9UQgenEJsR6UHoWuHV4Tpr4hZY7QwfY",\n      "latest_block_time": "2020-09-27T23:59:38.008063088Z",\n      "syncing": false\n    },\n    "validator_account_id": "nearup-node8"\n  },\n  "id": "dontcare"\n}\n'})})})]}),"\n",(0,a.jsx)(e.h4,{id:"what-could-go-wrong",children:"What could go wrong?"}),"\n",(0,a.jsxs)(e.p,{children:["When API request fails, RPC server returns a structured error response with a limited number of well-defined error variants, so client code can exhaustively handle all the possible error cases. Our JSON-RPC errors follow ",(0,a.jsx)(e.a,{href:"https://github.com/joyent/node-verror",children:"verror"})," convention for structuring the error response:"]}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-json",children:'{\n    "error": {\n        "name": <ERROR_TYPE>,\n        "cause": {\n            "info": {..},\n            "name": <ERROR_CAUSE>\n        },\n        "code": -32000,\n        "data": String,\n        "message": "Server error",\n    },\n    "id": "dontcare",\n    "jsonrpc": "2.0"\n}\n'})}),"\n",(0,a.jsxs)(e.blockquote,{children:["\n",(0,a.jsx)(e.p,{children:(0,a.jsx)(e.strong,{children:"Heads up"})}),"\n",(0,a.jsxs)(e.p,{children:["The fields ",(0,a.jsx)(e.code,{children:"code"}),", ",(0,a.jsx)(e.code,{children:"data"}),", and ",(0,a.jsx)(e.code,{children:"message"})," in the structure above are considered legacy ones and might be deprecated in the future. Please, don't rely on them."]}),"\n"]}),"\n",(0,a.jsxs)(e.p,{children:["Here is the exhaustive list of the error variants that can be returned by ",(0,a.jsx)(e.code,{children:"status"})," method:"]}),"\n",(0,a.jsxs)("table",{children:[(0,a.jsx)("thead",{children:(0,a.jsxs)("tr",{children:[(0,a.jsx)("th",{children:(0,a.jsxs)(e.p,{children:["ERROR_TYPE",(0,a.jsx)("br",{}),"\n",(0,a.jsx)("code",{children:"error.name"})]})}),(0,a.jsxs)("th",{children:["ERROR_CAUSE",(0,a.jsx)("br",{}),(0,a.jsx)("code",{children:"error.cause.name"})]}),(0,a.jsx)("th",{children:"Status Code"}),(0,a.jsx)("th",{children:"Reason"}),(0,a.jsx)("th",{children:"Solution"})]})}),(0,a.jsx)("tbody",{children:(0,a.jsxs)("tr",{children:[(0,a.jsx)("td",{children:"INTERNAL_ERROR"}),(0,a.jsx)("td",{children:"INTERNAL_ERROR"}),(0,a.jsx)("td",{children:"500"}),(0,a.jsx)("td",{children:"Something went wrong with the node itself or overloaded"}),(0,a.jsx)("td",{children:(0,a.jsxs)("ul",{children:[(0,a.jsx)("li",{children:"Try again later"}),(0,a.jsx)("li",{children:"Send a request to a different node"}),(0,a.jsxs)("li",{children:["Check ",(0,a.jsx)("code",{children:"error.cause.info"})," for more details"]})]})})]})})]}),"\n",(0,a.jsx)(e.hr,{}),"\n",(0,a.jsx)(e.h2,{id:"network-info",children:"Network Info"}),"\n",(0,a.jsxs)(e.blockquote,{children:["\n",(0,a.jsx)(e.p,{children:"Returns the current state of node network connections (active peers, transmitted data, etc.)"}),"\n"]}),"\n",(0,a.jsxs)(e.ul,{children:["\n",(0,a.jsxs)(e.li,{children:["method: ",(0,a.jsx)(e.code,{children:"network_info"})]}),"\n",(0,a.jsxs)(e.li,{children:["params: ",(0,a.jsx)(e.em,{children:"none"})]}),"\n"]}),"\n",(0,a.jsx)(e.p,{children:"Example:"}),"\n",(0,a.jsxs)(c.Z,{children:[(0,a.jsx)(d.Z,{value:"json",label:"JSON",default:!0,children:(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-json",children:'{\n  "jsonrpc": "2.0",\n  "id": "dontcare",\n  "method": "network_info",\n  "params": []\n}\n'})})}),(0,a.jsx)(d.Z,{value:"http",label:"HTTPie",children:(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-bash",children:"http post https://rpc.testnet.near.org jsonrpc=2.0 method=network_info params:='[]' id=dontcare\n"})})})]}),"\n",(0,a.jsxs)(s,{children:[(0,a.jsx)("summary",{children:"Example response:"}),(0,a.jsx)("p",{children:(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-json",children:'{\n  "jsonrpc": "2.0",\n  "result": {\n    "active_peers": [\n      {\n        "id": "ed25519:GkDv7nSMS3xcqA45cpMvFmfV1o4fRF6zYo1JRR6mNqg5",\n        "addr": "35.193.24.121:24567",\n        "account_id": null\n      }\n    ],\n    "num_active_peers": 34,\n    "peer_max_count": 40,\n    "sent_bytes_per_sec": 17754754,\n    "received_bytes_per_sec": 492116,\n    "known_producers": [\n      {\n        "account_id": "node0",\n        "addr": null,\n        "peer_id": "ed25519:7PGseFbWxvYVgZ89K1uTJKYoKetWs7BJtbyXDzfbAcqX"\n      }\n    ]\n  },\n  "id": "dontcare"\n}\n'})})})]}),"\n",(0,a.jsx)(e.h4,{id:"what-could-go-wrong-1",children:"What could go wrong?"}),"\n",(0,a.jsxs)(e.p,{children:["When API request fails, RPC server returns a structured error response with a limited number of well-defined error variants, so client code can exhaustively handle all the possible error cases. Our JSON-RPC errors follow ",(0,a.jsx)(e.a,{href:"https://github.com/joyent/node-verror",children:"verror"})," convention for structuring the error response:"]}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-json",children:'{\n    "error": {\n        "name": <ERROR_TYPE>,\n        "cause": {\n            "info": {..},\n            "name": <ERROR_CAUSE>\n        },\n        "code": -32000,\n        "data": String,\n        "message": "Server error",\n    },\n    "id": "dontcare",\n    "jsonrpc": "2.0"\n}\n'})}),"\n",(0,a.jsxs)(e.blockquote,{children:["\n",(0,a.jsx)(e.p,{children:(0,a.jsx)(e.strong,{children:"Heads up"})}),"\n",(0,a.jsxs)(e.p,{children:["The fields ",(0,a.jsx)(e.code,{children:"code"}),", ",(0,a.jsx)(e.code,{children:"data"}),", and ",(0,a.jsx)(e.code,{children:"message"})," in the structure above are considered legacy ones and might be deprecated in the future. Please, don't rely on them."]}),"\n"]}),"\n",(0,a.jsxs)(e.p,{children:["Here is the exhaustive list of the error variants that can be returned by ",(0,a.jsx)(e.code,{children:"network_info"})," method:"]}),"\n",(0,a.jsxs)("table",{children:[(0,a.jsx)("thead",{children:(0,a.jsxs)("tr",{children:[(0,a.jsx)("th",{children:(0,a.jsxs)(e.p,{children:["ERROR_TYPE",(0,a.jsx)("br",{}),"\n",(0,a.jsx)("code",{children:"error.name"})]})}),(0,a.jsxs)("th",{children:["ERROR_CAUSE",(0,a.jsx)("br",{}),(0,a.jsx)("code",{children:"error.cause.name"})]}),(0,a.jsx)("th",{children:"Status Code"}),(0,a.jsx)("th",{children:"Reason"}),(0,a.jsx)("th",{children:"Solution"})]})}),(0,a.jsx)("tbody",{children:(0,a.jsxs)("tr",{children:[(0,a.jsx)("td",{children:"INTERNAL_ERROR"}),(0,a.jsx)("td",{children:"INTERNAL_ERROR"}),(0,a.jsx)("td",{children:"500"}),(0,a.jsx)("td",{children:"Something went wrong with the node itself or overloaded"}),(0,a.jsx)("td",{children:(0,a.jsxs)("ul",{children:[(0,a.jsx)("li",{children:"Try again later"}),(0,a.jsx)("li",{children:"Send a request to a different node"}),(0,a.jsxs)("li",{children:["Check ",(0,a.jsx)("code",{children:"error.cause.info"})," for more details"]})]})})]})})]}),"\n",(0,a.jsx)(e.hr,{}),"\n",(0,a.jsx)(e.h2,{id:"validation-status",children:"Validation Status"}),"\n",(0,a.jsxs)(e.blockquote,{children:["\n",(0,a.jsx)(e.p,{children:"Queries active validators on the network returning details and the state of\nvalidation on the blockchain."}),"\n"]}),"\n",(0,a.jsxs)(e.ul,{children:["\n",(0,a.jsxs)(e.li,{children:["method: ",(0,a.jsx)(e.code,{children:"validators"})]}),"\n",(0,a.jsxs)(e.li,{children:["params: ",(0,a.jsx)(e.code,{children:'["block hash"]'}),", ",(0,a.jsx)(e.code,{children:"[block number]"}),", ",(0,a.jsx)(e.code,{children:'{"epoch_id": "epoch id"}'}),",\n",(0,a.jsx)(e.code,{children:'{"block_id": block number}'}),", ",(0,a.jsx)(e.code,{children:'{"block_id": "block hash"}'}),", or\n",(0,a.jsx)(e.code,{children:"[null]"})," for the latest block"]}),"\n"]}),"\n",(0,a.jsxs)(e.p,{children:[(0,a.jsx)(e.strong,{children:"Note:"})," If you want the latest ",(0,a.jsx)(e.code,{children:"block hash"}),", ",(0,a.jsx)(e.code,{children:"block number"})," and ",(0,a.jsx)(e.code,{children:"epoch id"}),",\nyou will need to query from the last block in an epoch. You can also query\nvalidators endpoint for past epochs if you input ",(0,a.jsx)(e.code,{children:"block hash"}),", ",(0,a.jsx)(e.code,{children:"block number"}),"\nor ",(0,a.jsx)(e.code,{children:"epoch id"})," of the past epoch that you want."]}),"\n",(0,a.jsx)(e.p,{children:"Example:"}),"\n",(0,a.jsxs)(e.p,{children:["input: ",(0,a.jsx)(e.code,{children:"[block number]"})]}),"\n",(0,a.jsxs)(c.Z,{children:[(0,a.jsx)(d.Z,{value:"json",label:"JSON",default:!0,children:(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-json",children:'{\n  "jsonrpc": "2.0",\n  "id": "dontcare",\n  "method": "validators",\n  "params": [17791098]\n}\n'})})}),(0,a.jsx)(d.Z,{value:"js",label:"\ud83c\udf10 JavaScript",label:"JavaScript"}),(0,a.jsx)(d.Z,{value:"http",label:"HTTPie",children:(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-bash",children:"http post https://rpc.testnet.near.org jsonrpc=2.0 method=validators params:='[17791098]' id=dontcare\n"})})})]}),"\n",(0,a.jsxs)(e.p,{children:["input: ",(0,a.jsx)(e.code,{children:'["block hash"]'})]}),"\n",(0,a.jsxs)(c.Z,{children:[(0,a.jsx)(d.Z,{value:"json",label:"JSON",default:!0,children:(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-json",children:'{\n  "jsonrpc": "2.0",\n  "id": "dontcare",\n  "method": "validators",\n  "params": ["FiG2nMjjue3YdgYAyM3ZqWXSaG6RJj5Gk7hvY8vrEoGw"]\n}\n'})})}),(0,a.jsx)(d.Z,{value:"http",label:"HTTPie",children:(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-bash",children:"http post https://rpc.testnet.near.org jsonrpc=2.0 method=validators params:='[\"FiG2nMjjue3YdgYAyM3ZqWXSaG6RJj5Gk7hvY8vrEoGw\"]' id=dontcare\n"})})})]}),"\n",(0,a.jsxs)(e.p,{children:["input: ",(0,a.jsx)(e.code,{children:'{"block_id": "block hash"}'})]}),"\n",(0,a.jsxs)(c.Z,{children:[(0,a.jsx)(d.Z,{value:"json",label:"JSON",default:!0,children:(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-json",children:'{\n  "jsonrpc": "2.0",\n  "id": "dontcare",\n  "method": "validators",\n  "params": {\n    "block_id": "FiG2nMjjue3YdgYAyM3ZqWXSaG6RJj5Gk7hvY8vrEoGw"\n  }\n}\n'})})}),(0,a.jsx)(d.Z,{value:"http",label:"HTTPie",children:(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-bash",children:'http post https://rpc.testnet.near.org jsonrpc=2.0 id=dontcare method=validators \\\n  params:=\'{\n    "block_id": "FiG2nMjjue3YdgYAyM3ZqWXSaG6RJj5Gk7hvY8vrEoGw"\n  }\'\n'})})})]}),"\n",(0,a.jsxs)(e.p,{children:["input: ",(0,a.jsx)(e.code,{children:'{"block_id": block number}'})]}),"\n",(0,a.jsxs)(c.Z,{children:[(0,a.jsx)(d.Z,{value:"json",label:"JSON",default:!0,children:(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-json",children:'{\n  "jsonrpc": "2.0",\n  "id": "dontcare",\n  "method": "validators",\n  "params": {\n    "block_id": 17791098\n  }\n}\n'})})}),(0,a.jsx)(d.Z,{value:"http",label:"HTTPie",children:(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-bash",children:'http post https://rpc.testnet.near.org jsonrpc=2.0 id=dontcare method=validators \\\n  params:=\'{\n    "block_id": 17791098\n  }`\n'})})})]}),"\n",(0,a.jsxs)(e.p,{children:["input: ",(0,a.jsx)(e.code,{children:'{"epoch_id": "epoch id"}'})]}),"\n",(0,a.jsxs)(c.Z,{children:[(0,a.jsx)(d.Z,{value:"json",label:"JSON",default:!0,children:(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-json",children:'{\n  "jsonrpc": "2.0",\n  "id": "dontcare",\n  "method": "validators",\n  "params": {\n    "epoch_id": "8hJSZNNyimPvsCA1v3dMr3Hg5ucYeLUbTvEfhr6jaWJy"\n  }\n}\n'})})}),(0,a.jsx)(d.Z,{value:"http",label:"HTTPie",children:(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-bash",children:'http post https://rpc.testnet.near.org jsonrpc=2.0 id=dontcare method=validators \\\n  params:=\'{\n    "epoch_id": "8hJSZNNyimPvsCA1v3dMr3Hg5ucYeLUbTvEfhr6jaWJy"\n  }`\n'})})})]}),"\n",(0,a.jsxs)(e.p,{children:["input: ",(0,a.jsx)(e.code,{children:"[null]"})]}),"\n",(0,a.jsxs)(c.Z,{children:[(0,a.jsx)(d.Z,{value:"json",label:"JSON",default:!0,children:(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-json",children:'{\n  "jsonrpc": "2.0",\n  "id": "dontcare",\n  "method": "validators",\n  "params": [null]\n}\n'})})}),(0,a.jsx)(d.Z,{value:"http",label:"HTTPie",children:(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-bash",children:"http post https://rpc.testnet.near.org jsonrpc=2.0 method=validators params:='[null]' id=dontcare\n"})})})]}),"\n",(0,a.jsxs)(s,{children:[(0,a.jsx)("summary",{children:"Example response: "}),(0,a.jsx)("p",{children:(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-json",children:'{\n  "jsonrpc": "2.0",\n  "result": {\n    "current_validators": [\n      {\n        "account_id": "01node.pool.f863973.m0",\n        "public_key": "ed25519:3iNqnvBgxJPXCxu6hNdvJso1PEAc1miAD35KQMBCA3aL",\n        "is_slashed": false,\n        "stake": "176429739989396285019500901780",\n        "shards": [0],\n        "num_produced_blocks": 213,\n        "num_expected_blocks": 213\n      },\n      {\n        "account_id": "alexandruast.pool.f863973.m0",\n        "public_key": "ed25519:A3XJ3uVGxSi9o2gnG2r8Ra3fqqodRpL4iuLTc6fNdGUj",\n        "is_slashed": false,\n        "stake": "151430394143736014372434860532",\n        "shards": [0],\n        "num_produced_blocks": 213,\n        "num_expected_blocks": 213\n      },\n      {\n        "account_id": "aquarius.pool.f863973.m0",\n        "public_key": "ed25519:8NfEarjStDYjJTwKUgQGy7Z7UTGsZaPhTUsExheQN3r1",\n        "is_slashed": false,\n        "stake": "130367563121508828296664196836",\n        "shards": [0],\n        "num_produced_blocks": 212,\n        "num_expected_blocks": 212\n      },\n      {\n        "account_id": "bazilik.pool.f863973.m0",\n        "public_key": "ed25519:3pDJwDQ6Y5B9QeW1jz8KunhZH4D4GQG86reTmrRfdD7c",\n        "is_slashed": false,\n        "stake": "169013447850997135034919151338",\n        "shards": [0],\n        "num_produced_blocks": 211,\n        "num_expected_blocks": 213\n      },\n      {\n        "account_id": "bisontrails.pool.f863973.m0",\n        "public_key": "ed25519:8g4P5EXyp2b2pfVMHY1QLfkRcY59hjPfWrFCKUWX3RmR",\n        "is_slashed": false,\n        "stake": "184162578269044826045352223479",\n        "shards": [0],\n        "num_produced_blocks": 213,\n        "num_expected_blocks": 213\n      },\n      {\n        "account_id": "bitcat.pool.f863973.m0",\n        "public_key": "ed25519:9mtnwPQyyap1QNH9ag6r4the7Jkkpdyt9HUF5G1dWxKx",\n        "is_slashed": false,\n        "stake": "135215509376418353124295451543",\n        "shards": [0],\n        "num_produced_blocks": 212,\n        "num_expected_blocks": 212\n      },\n      {\n        "account_id": "blazenet.pool.f863973.m0",\n        "public_key": "ed25519:DiogP36wBXKFpFeqirrxN8G2Mq9vnakgBvgnHdL9CcN3",\n        "is_slashed": false,\n        "stake": "137364229255641651855065314186",\n        "shards": [0],\n        "num_produced_blocks": 212,\n        "num_expected_blocks": 212\n      },\n      {\n        "account_id": "certusone.pool.f863973.m0",\n        "public_key": "ed25519:CKW7f41Kn8YCDPzaGLs1MrPb9h3BjQmHhbei6Ff6nRRF",\n        "is_slashed": false,\n        "stake": "176644821310043228577017742667",\n        "shards": [0],\n        "num_produced_blocks": 213,\n        "num_expected_blocks": 213\n      },\n      {\n        "account_id": "chorus-one.pool.f863973.m0",\n        "public_key": "ed25519:6LFwyEEsqhuDxorWfsKcPPs324zLWTaoqk4o6RDXN7Qc",\n        "is_slashed": false,\n        "stake": "110397600457815316527526651811",\n        "shards": [0],\n        "num_produced_blocks": 212,\n        "num_expected_blocks": 213\n      },\n      {\n        "account_id": "cloudpost.pool.f863973.m0",\n        "public_key": "ed25519:AVVLmJDG8z6UgmW9fmJGVFTdYxxfnqXH6c7FVQmhE6dp",\n        "is_slashed": false,\n        "stake": "136597929514591130855076834167",\n        "shards": [0],\n        "num_produced_blocks": 212,\n        "num_expected_blocks": 212\n      },\n      {\n        "account_id": "dokia.pool.f863973.m0",\n        "public_key": "ed25519:935JMz1vLcJxFApG3TY4MA4RHhvResvoGwCrQoJxHPn9",\n        "is_slashed": false,\n        "stake": "220445043066799898276306006919",\n        "shards": [0],\n        "num_produced_blocks": 426,\n        "num_expected_blocks": 426\n      },\n      {\n        "account_id": "dsrvlabs.pool.f863973.m0",\n        "public_key": "ed25519:61ei2efmmLkeDR1CG6JDEC2U3oZCUuC2K1X16Vmxrud9",\n        "is_slashed": false,\n        "stake": "161508967845718247649113721019",\n        "shards": [0],\n        "num_produced_blocks": 213,\n        "num_expected_blocks": 213\n      },\n      {\n        "account_id": "fresh_lockup.pool.f863973.m0",\n        "public_key": "ed25519:7CMFLtEohojtxBkmj9Jb6AGgbphb1zvxymHzpzuyCjfG",\n        "is_slashed": false,\n        "stake": "193574159400241036715020269158",\n        "shards": [0],\n        "num_produced_blocks": 212,\n        "num_expected_blocks": 212\n      },\n      {\n        "account_id": "inotel.pool.f863973.m0",\n        "public_key": "ed25519:C55jH1MCHYGa3tzUyZZdGrJmmCLP22Aa4v88KYpn2xwZ",\n        "is_slashed": false,\n        "stake": "178598870951670469578754984993",\n        "shards": [0],\n        "num_produced_blocks": 212,\n        "num_expected_blocks": 212\n      },\n      {\n        "account_id": "jazza.pool.f863973.m0",\n        "public_key": "ed25519:85cPMNVrqUz8N7oWbbvWbUuamHcJNe49uRbaSzftLCz9",\n        "is_slashed": false,\n        "stake": "155762349362951827286303475797",\n        "shards": [0],\n        "num_produced_blocks": 212,\n        "num_expected_blocks": 212\n      },\n      {\n        "account_id": "joe1.pool.f863973.m0",\n        "public_key": "ed25519:G3SxwzmiEZSm3bHnTLtxJvm3NvT1TLQcWuV1iod6i6NJ",\n        "is_slashed": false,\n        "stake": "129230772267511696840933436174",\n        "shards": [0],\n        "num_produced_blocks": 213,\n        "num_expected_blocks": 213\n      },\n      {\n        "account_id": "kronos.pool.f863973.m0",\n        "public_key": "ed25519:3i2pertqzF8xqkJ4BrE4t4r67YiYYrUKCktbqvDgjzuQ",\n        "is_slashed": false,\n        "stake": "144544279093485390569527924033",\n        "shards": [0],\n        "num_produced_blocks": 202,\n        "num_expected_blocks": 213\n      },\n      {\n        "account_id": "kytzu.pool.f863973.m0",\n        "public_key": "ed25519:61tgPZpy8tqFeAwG4vtf2ZKCRoENiP2A1TJVWEwnbxZU",\n        "is_slashed": false,\n        "stake": "113758432843198726378418342568",\n        "shards": [0],\n        "num_produced_blocks": 212,\n        "num_expected_blocks": 212\n      },\n      {\n        "account_id": "lowfeevalidation.pool.f863973.m0",\n        "public_key": "ed25519:EXyjSMGSnk5uGphF3gVV1jCudaAudbW8imoEccYEJg3V",\n        "is_slashed": false,\n        "stake": "113685537557977098595863252617",\n        "shards": [0],\n        "num_produced_blocks": 213,\n        "num_expected_blocks": 213\n      },\n      {\n        "account_id": "lunanova.pool.f863973.m0",\n        "public_key": "ed25519:2fZ59qfo9QHNLijoht9cwUb9enSNcnRmXbQn1gKZxvkw",\n        "is_slashed": false,\n        "stake": "172903039219549397267702571804",\n        "shards": [0],\n        "num_produced_blocks": 213,\n        "num_expected_blocks": 213\n      },\n      {\n        "account_id": "moonlet.pool.f863973.m0",\n        "public_key": "ed25519:3e1nVCVGNS3yr6CcUvpDAs3BhiWtyM9uTBWkyVR5Xn3K",\n        "is_slashed": false,\n        "stake": "140599784944681716744261599779",\n        "shards": [0],\n        "num_produced_blocks": 212,\n        "num_expected_blocks": 212\n      },\n      {\n        "account_id": "node0",\n        "public_key": "ed25519:7PGseFbWxvYVgZ89K1uTJKYoKetWs7BJtbyXDzfbAcqX",\n        "is_slashed": false,\n        "stake": "1907234923845608896091985071588",\n        "shards": [0],\n        "num_produced_blocks": 3614,\n        "num_expected_blocks": 3616\n      },\n      {\n        "account_id": "node1",\n        "public_key": "ed25519:6DSjZ8mvsRZDvFqFxo8tCKePG96omXW7eVYVSySmDk8e",\n        "is_slashed": false,\n        "stake": "1906065501889463342906704128820",\n        "shards": [0],\n        "num_produced_blocks": 3613,\n        "num_expected_blocks": 3614\n      },\n      {\n        "account_id": "node2",\n        "public_key": "ed25519:GkDv7nSMS3xcqA45cpMvFmfV1o4fRF6zYo1JRR6mNqg5",\n        "is_slashed": false,\n        "stake": "1840271519773089248112279578450",\n        "shards": [0],\n        "num_produced_blocks": 3615,\n        "num_expected_blocks": 3615\n      },\n      {\n        "account_id": "node3",\n        "public_key": "ed25519:ydgzeXHJ5Xyt7M1gXLxqLBW1Ejx6scNV5Nx2pxFM8su",\n        "is_slashed": false,\n        "stake": "1247270566437910246525604113433",\n        "shards": [0],\n        "num_produced_blocks": 2335,\n        "num_expected_blocks": 2342\n      },\n      {\n        "account_id": "nodeasy.pool.f863973.m0",\n        "public_key": "ed25519:25Dhg8NBvQhsVTuugav3t1To1X1zKiomDmnh8yN9hHMb",\n        "is_slashed": false,\n        "stake": "131652957125263756523827257067",\n        "shards": [0],\n        "num_produced_blocks": 212,\n        "num_expected_blocks": 212\n      },\n      {\n        "account_id": "northernlights.stakingpool",\n        "public_key": "ed25519:CsMecqKCfagnebMB3ha1uRubay5Z4V85req23bNAJSG3",\n        "is_slashed": false,\n        "stake": "159669819380982417675619400525",\n        "shards": [0],\n        "num_produced_blocks": 212,\n        "num_expected_blocks": 212\n      },\n      {\n        "account_id": "orangeclub.pool.f863973.m0",\n        "public_key": "ed25519:HezFeSzcwuR5wvkqccgMCMnpf1eQkVCfk52tXZEdKZHz",\n        "is_slashed": false,\n        "stake": "143971234567521206686862639104",\n        "shards": [0],\n        "num_produced_blocks": 212,\n        "num_expected_blocks": 212\n      },\n      {\n        "account_id": "pathrock.pool.f863973.m0",\n        "public_key": "ed25519:G138GdQsU7PdFLD6X88NmTLAEDR7agPcq9HLZqGpegkm",\n        "is_slashed": false,\n        "stake": "125204431569306697735287326827",\n        "shards": [0],\n        "num_produced_blocks": 212,\n        "num_expected_blocks": 212\n      },\n      {\n        "account_id": "pool_easy2stake.pool.f863973.m0",\n        "public_key": "ed25519:8nzKxvmyeauQRehWkby8GfWNLgqPiF5FCRFSD75M1Rwh",\n        "is_slashed": false,\n        "stake": "176893731686620703671521068552",\n        "shards": [0],\n        "num_produced_blocks": 212,\n        "num_expected_blocks": 212\n      },\n      {\n        "account_id": "sl1sub.pool.f863973.m0",\n        "public_key": "ed25519:3URBpNUjNAMzugQH1rdSKMtwFM8AwHaJgZk5Z6YtnfFL",\n        "is_slashed": false,\n        "stake": "155741680601335529540438949153",\n        "shards": [0],\n        "num_produced_blocks": 212,\n        "num_expected_blocks": 213\n      },\n      {\n        "account_id": "staked.pool.6fb1358",\n        "public_key": "ed25519:684rMbuVYYgL2CkmYgC1weLh3erd2bwrmtQtJJhWzPwj",\n        "is_slashed": false,\n        "stake": "126911347639167461321544980789",\n        "shards": [0],\n        "num_produced_blocks": 212,\n        "num_expected_blocks": 212\n      },\n      {\n        "account_id": "staked.pool.f863973.m0",\n        "public_key": "ed25519:D2afKYVaKQ1LGiWbMAZRfkKLgqimTR74wvtESvjx5Ft2",\n        "is_slashed": false,\n        "stake": "140558085958535444819294942478",\n        "shards": [0],\n        "num_produced_blocks": 213,\n        "num_expected_blocks": 213\n      },\n      {\n        "account_id": "stakin.pool.f863973.m0",\n        "public_key": "ed25519:GvddxjaxBCqGGB4kMNWNFtvozU1EEZ2jrnggKZW8LaU4",\n        "is_slashed": false,\n        "stake": "122221693837484004905170552626",\n        "shards": [0],\n        "num_produced_blocks": 212,\n        "num_expected_blocks": 212\n      },\n      {\n        "account_id": "staking-power.pool.f863973.m0",\n        "public_key": "ed25519:4s79F6Fdjgb3rHXPLwaXZG4Hq7Za8nogUu3vXEamRBQo",\n        "is_slashed": false,\n        "stake": "113293334165305165414435157738",\n        "shards": [0],\n        "num_produced_blocks": 212,\n        "num_expected_blocks": 212\n      },\n      {\n        "account_id": "syncnode.pool.f863973.m0",\n        "public_key": "ed25519:FUAVDkmLhuTbKYv4GWuWv9ogjKzRatLd5ZBMKXRy7WqE",\n        "is_slashed": false,\n        "stake": "133414422809248011010747790387",\n        "shards": [0],\n        "num_produced_blocks": 212,\n        "num_expected_blocks": 212\n      },\n      {\n        "account_id": "thepassivetrust.pool.f863973.m0",\n        "public_key": "ed25519:4NccD2DNJpBkDmWeJ2GbqPoivQ93qcKiR4PHALJKCTod",\n        "is_slashed": false,\n        "stake": "162714097201953456968339272308",\n        "shards": [0],\n        "num_produced_blocks": 213,\n        "num_expected_blocks": 213\n      },\n      {\n        "account_id": "top.pool.f863973.m0",\n        "public_key": "ed25519:FR5qxAsP8GgXDN96pappLtWMywiqWsPVqT3HLE3YaUx",\n        "is_slashed": false,\n        "stake": "164760602493727447176131601464",\n        "shards": [0],\n        "num_produced_blocks": 213,\n        "num_expected_blocks": 213\n      },\n      {\n        "account_id": "valeraverim.pool.f863973.m0",\n        "public_key": "ed25519:3686ABqNUZc1qhLWLHg5xZpBzrWPiUCMNZxcCNmg3e2s",\n        "is_slashed": false,\n        "stake": "191733144511459134091274432419",\n        "shards": [0],\n        "num_produced_blocks": 213,\n        "num_expected_blocks": 213\n      },\n      {\n        "account_id": "zainy.pool.f863973.m0",\n        "public_key": "ed25519:37KfhBNYjqpaUVh3ft5kPcFn3xK1eVvtDZJCQQVCGnzQ",\n        "is_slashed": false,\n        "stake": "113441017844444454951489924484",\n        "shards": [0],\n        "num_produced_blocks": 213,\n        "num_expected_blocks": 213\n      },\n      {\n        "account_id": "zpool.pool.f863973.m0",\n        "public_key": "ed25519:ETFRFNHfvd6fpj74MGYYQp3diY8WB4bFmWMxjTB2yY4V",\n        "is_slashed": false,\n        "stake": "140932616764414290525265048028",\n        "shards": [0],\n        "num_produced_blocks": 120,\n        "num_expected_blocks": 212\n      }\n    ],\n    "next_validators": [\n      {\n        "account_id": "01node.pool.f863973.m0",\n        "public_key": "ed25519:3iNqnvBgxJPXCxu6hNdvJso1PEAc1miAD35KQMBCA3aL",\n        "stake": "177341160716540400974121040893",\n        "shards": [0]\n      },\n      {\n        "account_id": "alexandruast.pool.f863973.m0",\n        "public_key": "ed25519:A3XJ3uVGxSi9o2gnG2r8Ra3fqqodRpL4iuLTc6fNdGUj",\n        "stake": "152212670433756011274558210225",\n        "shards": [0]\n      },\n      {\n        "account_id": "aquarius.pool.f863973.m0",\n        "public_key": "ed25519:8NfEarjStDYjJTwKUgQGy7Z7UTGsZaPhTUsExheQN3r1",\n        "stake": "131041030638338742265060835987",\n        "shards": [0]\n      },\n      {\n        "account_id": "bazilik.pool.f863973.m0",\n        "public_key": "ed25519:3pDJwDQ6Y5B9QeW1jz8KunhZH4D4GQG86reTmrRfdD7c",\n        "stake": "169886556654364796730036727847",\n        "shards": [0]\n      },\n      {\n        "account_id": "bisontrails.pool.f863973.m0",\n        "public_key": "ed25519:8g4P5EXyp2b2pfVMHY1QLfkRcY59hjPfWrFCKUWX3RmR",\n        "stake": "185113946165399113822995097304",\n        "shards": [0]\n      },\n      {\n        "account_id": "bitcat.pool.f863973.m0",\n        "public_key": "ed25519:9mtnwPQyyap1QNH9ag6r4the7Jkkpdyt9HUF5G1dWxKx",\n        "stake": "135914020962862866419944507506",\n        "shards": [0]\n      },\n      {\n        "account_id": "blazenet.pool.f863973.m0",\n        "public_key": "ed25519:DiogP36wBXKFpFeqirrxN8G2Mq9vnakgBvgnHdL9CcN3",\n        "stake": "138073840925159254185212483041",\n        "shards": [0]\n      },\n      {\n        "account_id": "certusone.pool.f863973.m0",\n        "public_key": "ed25519:CKW7f41Kn8YCDPzaGLs1MrPb9h3BjQmHhbei6Ff6nRRF",\n        "stake": "177557353126393581856047095474",\n        "shards": [0]\n      },\n      {\n        "account_id": "chorus-one.pool.f863973.m0",\n        "public_key": "ed25519:6LFwyEEsqhuDxorWfsKcPPs324zLWTaoqk4o6RDXN7Qc",\n        "stake": "110967904880664326100649881128",\n        "shards": [0]\n      },\n      {\n        "account_id": "cloudpost.pool.f863973.m0",\n        "public_key": "ed25519:AVVLmJDG8z6UgmW9fmJGVFTdYxxfnqXH6c7FVQmhE6dp",\n        "stake": "137303582563490110045159846741",\n        "shards": [0]\n      },\n      {\n        "account_id": "dokia.pool.f863973.m0",\n        "public_key": "ed25519:935JMz1vLcJxFApG3TY4MA4RHhvResvoGwCrQoJxHPn9",\n        "stake": "221583843027440134728813179120",\n        "shards": [0]\n      },\n      {\n        "account_id": "dsrvlabs.pool.f863973.m0",\n        "public_key": "ed25519:61ei2efmmLkeDR1CG6JDEC2U3oZCUuC2K1X16Vmxrud9",\n        "stake": "162343309156672629963246208215",\n        "shards": [0]\n      },\n      {\n        "account_id": "fresh_lockup.pool.f863973.m0",\n        "public_key": "ed25519:7CMFLtEohojtxBkmj9Jb6AGgbphb1zvxymHzpzuyCjfG",\n        "stake": "194574146707912827852030100603",\n        "shards": [0]\n      },\n      {\n        "account_id": "inotel.pool.f863973.m0",\n        "public_key": "ed25519:C55jH1MCHYGa3tzUyZZdGrJmmCLP22Aa4v88KYpn2xwZ",\n        "stake": "179521497218882663562358374377",\n        "shards": [0]\n      },\n      {\n        "account_id": "jazza.pool.f863973.m0",\n        "public_key": "ed25519:85cPMNVrqUz8N7oWbbvWbUuamHcJNe49uRbaSzftLCz9",\n        "stake": "156567004141558073310769195719",\n        "shards": [0]\n      },\n      {\n        "account_id": "joe1.pool.f863973.m0",\n        "public_key": "ed25519:G3SxwzmiEZSm3bHnTLtxJvm3NvT1TLQcWuV1iod6i6NJ",\n        "stake": "129898367221448376460128575495",\n        "shards": [0]\n      },\n      {\n        "account_id": "kronos.pool.f863973.m0",\n        "public_key": "ed25519:3i2pertqzF8xqkJ4BrE4t4r67YiYYrUKCktbqvDgjzuQ",\n        "stake": "145291600307308103830278523851",\n        "shards": [0]\n      },\n      {\n        "account_id": "kytzu.pool.f863973.m0",\n        "public_key": "ed25519:61tgPZpy8tqFeAwG4vtf2ZKCRoENiP2A1TJVWEwnbxZU",\n        "stake": "114346099616381729581424582943",\n        "shards": [0]\n      },\n      {\n        "account_id": "lowfeevalidation.pool.f863973.m0",\n        "public_key": "ed25519:EXyjSMGSnk5uGphF3gVV1jCudaAudbW8imoEccYEJg3V",\n        "stake": "114272827178534171015566175242",\n        "shards": [0]\n      },\n      {\n        "account_id": "lunanova.pool.f863973.m0",\n        "public_key": "ed25519:2fZ59qfo9QHNLijoht9cwUb9enSNcnRmXbQn1gKZxvkw",\n        "stake": "173796241314359640924313305613",\n        "shards": [0]\n      },\n      {\n        "account_id": "moonlet.pool.f863973.m0",\n        "public_key": "ed25519:3e1nVCVGNS3yr6CcUvpDAs3BhiWtyM9uTBWkyVR5Xn3K",\n        "stake": "141326111231422084384405939935",\n        "shards": [0]\n      },\n      {\n        "account_id": "node0",\n        "public_key": "ed25519:7PGseFbWxvYVgZ89K1uTJKYoKetWs7BJtbyXDzfbAcqX",\n        "stake": "1917087533938315356792420553580",\n        "shards": [0]\n      },\n      {\n        "account_id": "node1",\n        "public_key": "ed25519:6DSjZ8mvsRZDvFqFxo8tCKePG96omXW7eVYVSySmDk8e",\n        "stake": "1915912070849706566898523265362",\n        "shards": [0]\n      },\n      {\n        "account_id": "node2",\n        "public_key": "ed25519:GkDv7nSMS3xcqA45cpMvFmfV1o4fRF6zYo1JRR6mNqg5",\n        "stake": "1849778202731933988446605407109",\n        "shards": [0]\n      },\n      {\n        "account_id": "node3",\n        "public_key": "ed25519:ydgzeXHJ5Xyt7M1gXLxqLBW1Ejx6scNV5Nx2pxFM8su",\n        "stake": "1253713857932062021626652303305",\n        "shards": [0]\n      },\n      {\n        "account_id": "nodeasy.pool.f863973.m0",\n        "public_key": "ed25519:25Dhg8NBvQhsVTuugav3t1To1X1zKiomDmnh8yN9hHMb",\n        "stake": "132333065508677559475570461579",\n        "shards": [0]\n      },\n      {\n        "account_id": "northernlights.stakingpool",\n        "public_key": "ed25519:CsMecqKCfagnebMB3ha1uRubay5Z4V85req23bNAJSG3",\n        "stake": "160494659810582810750858869593",\n        "shards": [0]\n      },\n      {\n        "account_id": "orangeclub.pool.f863973.m0",\n        "public_key": "ed25519:HezFeSzcwuR5wvkqccgMCMnpf1eQkVCfk52tXZEdKZHz",\n        "stake": "144714977470413958038055754809",\n        "shards": [0]\n      },\n      {\n        "account_id": "pathrock.pool.f863973.m0",\n        "public_key": "ed25519:G138GdQsU7PdFLD6X88NmTLAEDR7agPcq9HLZqGpegkm",\n        "stake": "125851226796631921571804668732",\n        "shards": [0]\n      },\n      {\n        "account_id": "pool_easy2stake.pool.f863973.m0",\n        "public_key": "ed25519:8nzKxvmyeauQRehWkby8GfWNLgqPiF5FCRFSD75M1Rwh",\n        "stake": "177807549352374182247265978294",\n        "shards": [0]\n      },\n      {\n        "account_id": "sl1sub.pool.f863973.m0",\n        "public_key": "ed25519:3URBpNUjNAMzugQH1rdSKMtwFM8AwHaJgZk5Z6YtnfFL",\n        "stake": "156546228606913052982706314599",\n        "shards": [0]\n      },\n      {\n        "account_id": "staked.pool.6fb1358",\n        "public_key": "ed25519:684rMbuVYYgL2CkmYgC1weLh3erd2bwrmtQtJJhWzPwj",\n        "stake": "127566960646771620637977634520",\n        "shards": [0]\n      },\n      {\n        "account_id": "staked.pool.f863973.m0",\n        "public_key": "ed25519:D2afKYVaKQ1LGiWbMAZRfkKLgqimTR74wvtESvjx5Ft2",\n        "stake": "141284196855966747583242721111",\n        "shards": [0]\n      },\n      {\n        "account_id": "stakin.pool.f863973.m0",\n        "public_key": "ed25519:GvddxjaxBCqGGB4kMNWNFtvozU1EEZ2jrnggKZW8LaU4",\n        "stake": "122853080560791799567241762038",\n        "shards": [0]\n      },\n      {\n        "account_id": "staking-power.pool.f863973.m0",\n        "public_key": "ed25519:4s79F6Fdjgb3rHXPLwaXZG4Hq7Za8nogUu3vXEamRBQo",\n        "stake": "113878597697173990840757447344",\n        "shards": [0]\n      },\n      {\n        "account_id": "syncnode.pool.f863973.m0",\n        "public_key": "ed25519:FUAVDkmLhuTbKYv4GWuWv9ogjKzRatLd5ZBMKXRy7WqE",\n        "stake": "134103630138795323490241660174",\n        "shards": [0]\n      },\n      {\n        "account_id": "thepassivetrust.pool.f863973.m0",\n        "public_key": "ed25519:4NccD2DNJpBkDmWeJ2GbqPoivQ93qcKiR4PHALJKCTod",\n        "stake": "163554668234785516757420218799",\n        "shards": [0]\n      },\n      {\n        "account_id": "top.pool.f863973.m0",\n        "public_key": "ed25519:FR5qxAsP8GgXDN96pappLtWMywiqWsPVqT3HLE3YaUx",\n        "stake": "165611741467072665024638629174",\n        "shards": [0]\n      },\n      {\n        "account_id": "valeraverim.pool.f863973.m0",\n        "public_key": "ed25519:3686ABqNUZc1qhLWLHg5xZpBzrWPiUCMNZxcCNmg3e2s",\n        "stake": "192723621295992295990275575014",\n        "shards": [0]\n      },\n      {\n        "account_id": "zainy.pool.f863973.m0",\n        "public_key": "ed25519:37KfhBNYjqpaUVh3ft5kPcFn3xK1eVvtDZJCQQVCGnzQ",\n        "stake": "114027175849273464802110072969",\n        "shards": [0]\n      },\n      {\n        "account_id": "zpool.pool.f863973.m0",\n        "public_key": "ed25519:ETFRFNHfvd6fpj74MGYYQp3diY8WB4bFmWMxjTB2yY4V",\n        "stake": "141660662431449802378487016195",\n        "shards": [0]\n      }\n    ],\n    "current_fishermen": [\n      {\n        "account_id": "staked.stakingpool",\n        "public_key": "ed25519:5VmCXxWepj22uFoKmrxk6DTiFa3fuTzDcwGxM8uUErpr",\n        "stake": "5957256918881889179239884296"\n      },\n      {\n        "account_id": "bisontrails.stakingpool",\n        "public_key": "ed25519:ED2v5KtScbk6aNjGcTn1YMDUu3EXfD5HPt1x6RiYBypk",\n        "stake": "7679439354334034871130713908"\n      },\n      {\n        "account_id": "cryptium.stakingpool",\n        "public_key": "ed25519:2usUkjmKWxQw7QUeFfELHCEqS2UxjwsRqnCkA5oQ6A2B",\n        "stake": "6484546971716985483357166277"\n      },\n      {\n        "account_id": "buildlinks3.pool.f863973.m0",\n        "public_key": "ed25519:Cfy8xjSsvVquSqo7W4A2bRX1vkLPycLgyCvFNs3Rz6bb",\n        "stake": "81221864655530313350540629757"\n      },\n      {\n        "account_id": "mmm.pool.f863973.m0",\n        "public_key": "ed25519:3jEqDDKaJEg1r8UGu2x2dC55BXE7i26yNFQzvfJkkHkf",\n        "stake": "80030001196381772535600000000"\n      }\n    ],\n    "next_fishermen": [\n      {\n        "account_id": "staked.stakingpool",\n        "public_key": "ed25519:5VmCXxWepj22uFoKmrxk6DTiFa3fuTzDcwGxM8uUErpr",\n        "stake": "5957256918881889179239884296"\n      },\n      {\n        "account_id": "bisontrails.stakingpool",\n        "public_key": "ed25519:ED2v5KtScbk6aNjGcTn1YMDUu3EXfD5HPt1x6RiYBypk",\n        "stake": "7679439354334034871130713908"\n      },\n      {\n        "account_id": "cryptium.stakingpool",\n        "public_key": "ed25519:2usUkjmKWxQw7QUeFfELHCEqS2UxjwsRqnCkA5oQ6A2B",\n        "stake": "6484546971716985483357166277"\n      },\n      {\n        "account_id": "buildlinks3.pool.f863973.m0",\n        "public_key": "ed25519:Cfy8xjSsvVquSqo7W4A2bRX1vkLPycLgyCvFNs3Rz6bb",\n        "stake": "81221864655530313350540629757"\n      },\n      {\n        "account_id": "mmm.pool.f863973.m0",\n        "public_key": "ed25519:3jEqDDKaJEg1r8UGu2x2dC55BXE7i26yNFQzvfJkkHkf",\n        "stake": "80030001196381772535600000000"\n      }\n    ],\n    "current_proposals": [\n      {\n        "account_id": "kytzu.pool.f863973.m0",\n        "public_key": "ed25519:61tgPZpy8tqFeAwG4vtf2ZKCRoENiP2A1TJVWEwnbxZU",\n        "stake": "114346100195275968419224582943"\n      },\n      {\n        "account_id": "nodeasy.pool.f863973.m0",\n        "public_key": "ed25519:25Dhg8NBvQhsVTuugav3t1To1X1zKiomDmnh8yN9hHMb",\n        "stake": "132333066144809013154670461579"\n      },\n      {\n        "account_id": "thepassivetrust.pool.f863973.m0",\n        "public_key": "ed25519:4NccD2DNJpBkDmWeJ2GbqPoivQ93qcKiR4PHALJKCTod",\n        "stake": "163554672455685458970920218837"\n      }\n    ],\n    "prev_epoch_kickout": [],\n    "epoch_start_height": 17754191,\n    "epoch_height": 321\n  },\n  "id": "dontcare"\n}\n'})})})]}),"\n",(0,a.jsx)(e.h4,{id:"what-could-go-wrong-2",children:"What could go wrong?"}),"\n",(0,a.jsxs)(e.p,{children:["When API request fails, RPC server returns a structured error response with a limited number of well-defined error variants, so client code can exhaustively handle all the possible error cases. Our JSON-RPC errors follow ",(0,a.jsx)(e.a,{href:"https://github.com/joyent/node-verror",children:"verror"})," convention for structuring the error response:"]}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-json",children:'{\n    "error": {\n        "name": <ERROR_TYPE>,\n        "cause": {\n            "info": {..},\n            "name": <ERROR_CAUSE>\n        },\n        "code": -32000,\n        "data": String,\n        "message": "Server error",\n    },\n    "id": "dontcare",\n    "jsonrpc": "2.0"\n}\n'})}),"\n",(0,a.jsxs)(e.blockquote,{children:["\n",(0,a.jsx)(e.p,{children:(0,a.jsx)(e.strong,{children:"Heads up"})}),"\n",(0,a.jsxs)(e.p,{children:["The fields ",(0,a.jsx)(e.code,{children:"code"}),", ",(0,a.jsx)(e.code,{children:"data"}),", and ",(0,a.jsx)(e.code,{children:"message"})," in the structure above are considered legacy ones and might be deprecated in the future. Please, don't rely on them."]}),"\n"]}),"\n",(0,a.jsxs)(e.p,{children:["Here is the exhaustive list of the error variants that can be returned by ",(0,a.jsx)(e.code,{children:"validators"})," method:"]}),"\n",(0,a.jsxs)("table",{children:[(0,a.jsx)("thead",{children:(0,a.jsxs)("tr",{children:[(0,a.jsx)("th",{children:(0,a.jsxs)(e.p,{children:["ERROR_TYPE",(0,a.jsx)("br",{}),"\n",(0,a.jsx)("code",{children:"error.name"})]})}),(0,a.jsxs)("th",{children:["ERROR_CAUSE",(0,a.jsx)("br",{}),(0,a.jsx)("code",{children:"error.cause.name"})]}),(0,a.jsx)("th",{children:"Status Code"}),(0,a.jsx)("th",{children:"Reason"}),(0,a.jsx)("th",{children:"Solution"})]})}),(0,a.jsxs)("tbody",{children:[(0,a.jsxs)("tr",{children:[(0,a.jsx)("td",{children:"HANDLER_ERROR"}),(0,a.jsx)("td",{children:"UNKNOWN_EPOCH"}),(0,a.jsx)("td",{children:"200"}),(0,a.jsx)("td",{children:"An epoch for the provided block can't be found in a database"}),(0,a.jsx)("td",{children:(0,a.jsxs)("ul",{children:[(0,a.jsx)("li",{children:"Check that the requested block is legit"}),(0,a.jsx)("li",{children:"If the block had been produced more than 5 epochs ago, try to send your request to an archival node"}),(0,a.jsx)("li",{children:"Check that the requested block is the last block of some epoch"})]})})]}),(0,a.jsxs)("tr",{children:[(0,a.jsx)("td",{children:"REQUEST_VALIDATION_ERROR"}),(0,a.jsx)("td",{children:"PARSE_ERROR"}),(0,a.jsx)("td",{children:"400"}),(0,a.jsx)("td",{children:"Passed arguments can't be parsed by JSON RPC server (missing arguments, wrong format, etc.)"}),(0,a.jsx)("td",{children:(0,a.jsxs)("ul",{children:[(0,a.jsx)("li",{children:"Check the arguments passed and pass the correct ones"}),(0,a.jsxs)("li",{children:["Check ",(0,a.jsx)("code",{children:"error.cause.info"})," for more details"]})]})})]}),(0,a.jsxs)("tr",{children:[(0,a.jsx)("td",{children:"INTERNAL_ERROR"}),(0,a.jsx)("td",{children:"INTERNAL_ERROR"}),(0,a.jsx)("td",{children:"500"}),(0,a.jsx)("td",{children:"Something went wrong with the node itself or overloaded"}),(0,a.jsx)("td",{children:(0,a.jsxs)("ul",{children:[(0,a.jsx)("li",{children:"Try again later"}),(0,a.jsx)("li",{children:"Send a request to a different node"}),(0,a.jsxs)("li",{children:["Check ",(0,a.jsx)("code",{children:"error.cause.info"})," for more details"]})]})})]})]})]}),"\n",(0,a.jsx)(e.hr,{})]})}function p(n={}){const{wrapper:e}={...(0,o.a)(),...n.components};return e?(0,a.jsx)(e,{...n,children:(0,a.jsx)(h,{...n})}):h(n)}},85162:(n,e,s)=>{s.d(e,{Z:()=>d});s(67294);var a=s(36905);const o={tabItem:"tabItem_Ymn6"};var c=s(85893);function d(n){var e=n.children,s=n.hidden,d=n.className;return(0,c.jsx)("div",{role:"tabpanel",className:(0,a.Z)(o.tabItem,d),hidden:s,children:e})}},74866:(n,e,s)=>{s.d(e,{Z:()=>g});var a=s(67294),o=s(36905),c=s(12466),d=s(16550),r=s(20469),t=s(91980),l=s(67392),i=s(20812);function u(n){var e,s;return null!=(e=null==(s=a.Children.toArray(n).filter((function(n){return"\n"!==n})).map((function(n){if(!n||(0,a.isValidElement)(n)&&((e=n.props)&&"object"==typeof e&&"value"in e))return n;var e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof n.type?n.type:n.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})))?void 0:s.filter(Boolean))?e:[]}function h(n){var e=n.values,s=n.children;return(0,a.useMemo)((function(){var n=null!=e?e:function(n){return u(n).map((function(n){var e=n.props;return{value:e.value,label:e.label,attributes:e.attributes,default:e.default}}))}(s);return function(n){var e=(0,l.lx)(n,(function(n,e){return n.value===e.value}));if(e.length>0)throw new Error('Docusaurus error: Duplicate values "'+e.map((function(n){return n.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.')}(n),n}),[e,s])}function p(n){var e=n.value;return n.tabValues.some((function(n){return n.value===e}))}function _(n){var e=n.queryString,s=void 0!==e&&e,o=n.groupId,c=(0,d.k6)(),r=function(n){var e=n.queryString,s=void 0!==e&&e,a=n.groupId;if("string"==typeof s)return s;if(!1===s)return null;if(!0===s&&!a)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return null!=a?a:null}({queryString:s,groupId:o});return[(0,t._X)(r),(0,a.useCallback)((function(n){if(r){var e=new URLSearchParams(c.location.search);e.set(r,n),c.replace(Object.assign({},c.location,{search:e.toString()}))}}),[r,c])]}function m(n){var e,s,o,c,d=n.defaultValue,t=n.queryString,l=void 0!==t&&t,u=n.groupId,m=h(n),k=(0,a.useState)((function(){return function(n){var e,s=n.defaultValue,a=n.tabValues;if(0===a.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(s){if(!p({value:s,tabValues:a}))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+s+'" but none of its children has the corresponding value. Available values are: '+a.map((function(n){return n.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");return s}var o=null!=(e=a.find((function(n){return n.default})))?e:a[0];if(!o)throw new Error("Unexpected error: 0 tabValues");return o.value}({defaultValue:d,tabValues:m})})),b=k[0],f=k[1],x=_({queryString:l,groupId:u}),j=x[0],v=x[1],g=(e=function(n){return n?"docusaurus.tab."+n:null}({groupId:u}.groupId),s=(0,i.Nk)(e),o=s[0],c=s[1],[o,(0,a.useCallback)((function(n){e&&c.set(n)}),[e,c])]),y=g[0],R=g[1],N=function(){var n=null!=j?j:y;return p({value:n,tabValues:m})?n:null}();return(0,r.Z)((function(){N&&f(N)}),[N]),{selectedValue:b,selectValue:(0,a.useCallback)((function(n){if(!p({value:n,tabValues:m}))throw new Error("Can't select invalid tab value="+n);f(n),v(n),R(n)}),[v,R,m]),tabValues:m}}var k=s(72389);const b={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var f=s(85893);function x(n){var e=n.className,s=n.block,a=n.selectedValue,d=n.selectValue,r=n.tabValues,t=[],l=(0,c.o5)().blockElementScrollPositionUntilNextRender,i=function(n){var e=n.currentTarget,s=t.indexOf(e),o=r[s].value;o!==a&&(l(e),d(o))},u=function(n){var e,s=null;switch(n.key){case"Enter":i(n);break;case"ArrowRight":var a,o=t.indexOf(n.currentTarget)+1;s=null!=(a=t[o])?a:t[0];break;case"ArrowLeft":var c,d=t.indexOf(n.currentTarget)-1;s=null!=(c=t[d])?c:t[t.length-1]}null==(e=s)||e.focus()};return(0,f.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":s},e),children:r.map((function(n){var e=n.value,s=n.label,c=n.attributes;return(0,f.jsx)("li",Object.assign({role:"tab",tabIndex:a===e?0:-1,"aria-selected":a===e,ref:function(n){return t.push(n)},onKeyDown:u,onClick:i},c,{className:(0,o.Z)("tabs__item",b.tabItem,null==c?void 0:c.className,{"tabs__item--active":a===e}),children:null!=s?s:e}),e)}))})}function j(n){var e=n.lazy,s=n.children,c=n.selectedValue,d=(Array.isArray(s)?s:[s]).filter(Boolean);if(e){var r=d.find((function(n){return n.props.value===c}));return r?(0,a.cloneElement)(r,{className:(0,o.Z)("margin-top--md",r.props.className)}):null}return(0,f.jsx)("div",{className:"margin-top--md",children:d.map((function(n,e){return(0,a.cloneElement)(n,{key:e,hidden:n.props.value!==c})}))})}function v(n){var e=m(n);return(0,f.jsxs)("div",{className:(0,o.Z)("tabs-container",b.tabList),children:[(0,f.jsx)(x,Object.assign({},e,n)),(0,f.jsx)(j,Object.assign({},e,n))]})}function g(n){var e=(0,k.Z)();return(0,f.jsx)(v,Object.assign({},n,{children:u(n.children)}),String(e))}},11151:(n,e,s)=>{s.d(e,{Z:()=>r,a:()=>d});var a=s(67294);const o={},c=a.createContext(o);function d(n){const e=a.useContext(c);return a.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function r(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(o):n.components||o:d(n.components),a.createElement(c.Provider,{value:e},n.children)}}}]);