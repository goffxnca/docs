"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[8008],{54280:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>i,default:()=>h,frontMatter:()=>r,metadata:()=>c,toc:()=>l});var s=t(85893),o=t(11151);const r={id:"networks",title:"NEAR Networks",sidebar_label:"Networks"},i=void 0,c={id:"concepts/basics/networks",title:"NEAR Networks",description:"NEAR Protocol operates on several networks each operating with their own independent validators and unique state. These networks are as follows:",source:"@site/../_docs/1.concepts/basics/networks.md",sourceDirName:"1.concepts/basics",slug:"/concepts/basics/networks",permalink:"/docs/concepts/basics/networks",draft:!1,unlisted:!1,editUrl:"https://github.com/near/docs/edit/master/website/../_docs/1.concepts/basics/networks.md",tags:[],version:"current",frontMatter:{id:"networks",title:"NEAR Networks",sidebar_label:"Networks"},sidebar:"build",previous:{title:"Validators",permalink:"/docs/concepts/basics/validators"},next:{title:"Epoch",permalink:"/docs/concepts/basics/epoch"}},a={},l=[{value:"Mainnet",id:"mainnet",level:2},{value:"Testnet",id:"testnet",level:2},{value:"Localnet",id:"localnet",level:2}];function d(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h2:"h2",hr:"hr",li:"li",p:"p",ul:"ul",...(0,o.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.p,{children:"NEAR Protocol operates on several networks each operating with their own independent validators and unique state. These networks are as follows:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"/concepts/basics/networks#mainnet",children:(0,s.jsx)(n.code,{children:"mainnet"})})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"/concepts/basics/networks#testnet",children:(0,s.jsx)(n.code,{children:"testnet"})})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"/concepts/basics/networks#localnet",children:(0,s.jsx)(n.code,{children:"localnet"})})}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"mainnet",children:"Mainnet"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"mainnet"})," is for production ready smart contracts and live token transfers. Contracts ready for ",(0,s.jsx)(n.code,{children:"mainnet"})," should have gone through rigorous testing and independent security reviews if necessary. ",(0,s.jsx)(n.code,{children:"mainnet"})," is the only network where state is guaranteed to persist over time ",(0,s.jsx)(n.em,{children:"(subject to the typical security guarantees of the network's validation process)"}),"."]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Status: ",(0,s.jsx)(n.code,{children:"https://rpc.mainnet.near.org/status"})]}),"\n",(0,s.jsxs)(n.li,{children:["[ ",(0,s.jsx)(n.a,{href:"https://nearblocks.io",children:"NearBlocks Explorer"})," ]"]}),"\n",(0,s.jsxs)(n.li,{children:["[ ",(0,s.jsx)(n.a,{href:"https://wallet.near.org",children:"Wallet"})," ]"]}),"\n",(0,s.jsxs)(n.li,{children:["[ ",(0,s.jsx)(n.a,{href:"https://near-nodes.io/intro/node-data-snapshots",children:"Data Snapshots"})," ]"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"testnet",children:"Testnet"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"testnet"})," is a public network and the final testing network for ",(0,s.jsx)(n.code,{children:"nearcore"})," changes before deployment to ",(0,s.jsx)(n.code,{children:"mainnet"}),". ",(0,s.jsx)(n.code,{children:"testnet"})," is intended for testing all aspects of the NEAR platform prior to ",(0,s.jsx)(n.code,{children:"mainnet"})," deployment. From account creation, mock token transfers, development tooling, and smart contract development, the ",(0,s.jsx)(n.code,{children:"testnet"})," environment closely resembles ",(0,s.jsx)(n.code,{children:"mainnet"})," behavior. All ",(0,s.jsx)(n.code,{children:"nearcore"})," changes are deployed as release candidates on first testnet, before the changes are released on ",(0,s.jsx)(n.code,{children:"mainnet"}),". A number of ",(0,s.jsx)(n.code,{children:"testnet"})," validators validate transactions and create new blocks. dApp developers deploy their applications on ",(0,s.jsx)(n.code,{children:"testnet"})," before deploying on ",(0,s.jsx)(n.code,{children:"mainnet"}),". It is important to note that ",(0,s.jsx)(n.code,{children:"testnet"})," has its own transactions and states."]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Status: ",(0,s.jsx)(n.code,{children:"https://rpc.testnet.near.org/status"})]}),"\n",(0,s.jsxs)(n.li,{children:["[ ",(0,s.jsx)(n.a,{href:"https://testnet.nearblocks.io",children:"Explorer"})," ]"]}),"\n",(0,s.jsxs)(n.li,{children:["[ ",(0,s.jsx)(n.a,{href:"https://testnet.mynearwallet.com/",children:"Wallet"})," ]"]}),"\n",(0,s.jsxs)(n.li,{children:["[ ",(0,s.jsx)(n.a,{href:"https://near-nodes.io/intro/node-data-snapshots",children:"Data Snapshots"})," ]"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"localnet",children:"Localnet"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"localnet"})," is intended for developers who want to work with the NEAR platform independent of the public blockchain. You will need to generate nodes yourself. ",(0,s.jsx)(n.code,{children:"localnet"})," gives you the total control over accounts, economics, and other factors for more advanced use cases (including making changes to ",(0,s.jsx)(n.code,{children:"nearcore"}),"). For developers, ",(0,s.jsx)(n.code,{children:"localnet"})," is the right choice if you prefer to avoid leaking information about your work during the development process."]}),"\n",(0,s.jsxs)(n.p,{children:["More on local development ",(0,s.jsx)(n.a,{href:"https://near-nodes.io/validator/running-a-node",children:"here"})]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.admonition,{title:"Got a question?",type:"tip",children:(0,s.jsx)("a",{href:"https://stackoverflow.com/questions/tagged/nearprotocol",target:"_blank",rel:"noopener noreferrer",children:(0,s.jsx)("h8",{children:"Ask it on StackOverflow!"})})})]})}function h(e={}){const{wrapper:n}={...(0,o.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},11151:(e,n,t)=>{t.d(n,{Z:()=>c,a:()=>i});var s=t(67294);const o={},r=s.createContext(o);function i(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);